name: release-main

on:
  release:
    types: [published]
    branches: [main]

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read


jobs:
  
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Export tag
        id: vars
        run: echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT

    
      - name: Build
        run: |
          source .venv/bin/activate
          poetry version $RELEASE_VERSION
          make build
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github
          aws-region: us-east-1

      - name: Retrieve CodeArtifact token
        id: codeartifact-token
        run: echo "TOKEN=$(aws codeartifact get-authorization-token --domain ${{ vars.CODEARTIFACT_DOMAIN }} --domain-owner ${{ vars.CODEARTIFACT_OWNER }} --query authorizationToken --output text)" >> $GITHUB_ENV
      
      - name: Retrieve CodeArtifact repository URL
        id: codeartifact-url
        run: echo "REPOSITORY_URL=$(aws codeartifact get-repository-endpoint --domain ${{ vars.CODEARTIFACT_DOMAIN }} --domain-owner ${{ vars.CODEARTIFACT_OWNER }} --repository ${{ vars.CODEARTIFACT_REPOSITORY_NAME }} --format pypi --query repositoryEndpoint --output text)" >> $GITHUB_ENV
        
      - name: Authenticate to CodeArtifact
        uses: ./.github/actions/codeartifact-login
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github
          codeartifact-domain: ${{ vars.CODEARTIFACT_DOMAIN }}
          codeartifact-domain-owner: ${{ vars.CODEARTIFACT_OWNER }}
          codeartifact-repository: ${{ vars.CODEARTIFACT_REPOSITORY_NAME }}
          configure-poetry: true


      - name: Publish to CodeArtifact
        env:
          CODEARTIFACT_REPOSITORY_NAME: ${{ vars.CODEARTIFACT_REPOSITORY_NAME }}
        run: |
          source .venv/bin/activate
          poetry publish -r $CODEARTIFACT_REPOSITORY_NAME


  
  deploy-docs:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Deploy documentation
        run: poetry run mkdocs gh-deploy --force
  
