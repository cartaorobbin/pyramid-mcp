name: Test and Quality Checks

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up Python environment
        uses: ./.github/actions/setup-poetry-env
        with:
          python-version: "3.11"

      - name: Run code quality checks
        run: |
          source .venv/bin/activate
          make check

  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
      fail-fast: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Cache tox environments
        uses: actions/cache@v4
        with:
          path: .tox
          key: tox-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install tox and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions

      - name: Run tests with tox
        run: tox

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.11'
        with:
          fail_ci_if_error: false
          verbose: true

  # Uncomment when documentation is ready
  # check-docs:
  #   name: Documentation Build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4
  #
  #     - name: Set up Python environment
  #       uses: ./.github/actions/setup-poetry-env
  #       with:
  #         python-version: "3.11"
  #
  #     - name: Build documentation
  #       run: |
  #         source .venv/bin/activate
  #         poetry run mkdocs build -s

  # Job to ensure all required checks pass
  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: always()
    steps:
      - name: Check all job statuses
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "❌ Some checks failed"
          exit 1
      - name: All checks passed
        run: |
          echo "✅ All checks passed successfully"

